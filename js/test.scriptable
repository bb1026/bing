{
  "icon" : {
    "color" : "cyan",
    "glyph" : "theater-masks"
  },
  "share_sheet_inputs" : [
  ],
  "name" : "Master List",
  "always_run_in_app" : false,
  "script" : "this.name = \"Master List\";\nthis.widget_ID = \"js-105\";\nthis.version = \"v1.2\";\n\n// 检查更新\nawait CheckKu();\nconst { installation } = importModule(\"Ku\");\nawait installation(this.widget_ID, this.version);\n\n/* \n以上为获取更新代码\n以下开始运行代码\n*/\n\nlet scriptListURL = \"https://bb1026.github.io/bing/js/Master.json\";\nlet scriptList = await new Request(scriptListURL).loadJSON();\n\nlet sortedScripts = Object.values(scriptList).sort(\n  (a, b) => parseInt(a.ID.slice(3)) - parseInt(b.ID.slice(3))\n);\n\nlet table = new UITable();\ntable.showSeparators = true;\n\nlet clearKu = new UITableRow();\nclearKu.isHeader = true;\nlet clearText = clearKu.addText(\"清除依赖库\");\nclearText.titleColor = Color.red();\nclearText.centerAligned();\n    \nclearKu.onSelect = function() {\n    const fm = FileManager.local();\n    const KuName = \"Ku.js\";\n    const scriptPath = fm.joinPath(fm.documentsDirectory(), KuName);\n    \n    if (fm.fileExists(scriptPath)) {\n        fm.remove(scriptPath);\n        console.log(\"Ku.js 已被清除\");\n        let alert = new Alert();\n        alert.title = \"操作完成\";\n        alert.message = \"依赖库已清除\";\n        alert.addAction(\"确定\");\n        alert.present();\n    } else {\n        console.log(\"Ku.js 不存在\");\n    }\n};\ntable.addRow(clearKu);\n\nlet headerRow = new UITableRow();\nheaderRow.isHeader = true;\nconst HID = headerRow.addText(\"ID\");\nconst HNAME = headerRow.addText(\"名称\");\nconst HUPDATE = headerRow.addText(\"更新信息\");\n\nHID.widthWeight = 15;\nHNAME.widthWeight = 35;\nHUPDATE.widthWeight = 40;\ntable.addRow(headerRow);\n\nfor (let script of sortedScripts) {\n  let row = new UITableRow();\n  row.height = 90;\n  const TID = row.addText(script.ID.toString());\n  const TNAME = row.addText(`${script.name} ${script.version}`);\n  const TUPDATE = row.addText(script.update);\n\n  TID.widthWeight = 15;\n  TNAME.widthWeight = 35;\n  TUPDATE.widthWeight = 40;\n\n  row.onSelect = async () => {\n    await installation(script.ID);\n  };\n  table.addRow(row);\n}\n\nasync function CheckKu() {\n  const notification = new Notification();\n  const fm = FileManager.local();\n  const KuName = \"Ku.js\";\n  const scriptPath = fm.joinPath(fm.documentsDirectory(), KuName);\n  const scriptExists = fm.fileExists(scriptPath);\n\n  if (!scriptExists) {\n    try {\n      const downloadReq = new Request(\"https://bb1026.github.io/bing/js/Ku.js\");\n      const scriptContent = await downloadReq.loadString();\n      await fm.writeString(scriptPath, scriptContent);\n\n      notification.title = \"依赖库安装完成!\";\n      await notification.schedule();\n      console.log(\"依赖库安装完成!\");\n    } catch (error) {\n      console.error(\"下载或写入文件时出错:\", error);\n      notification.title = \"依赖库安装失败!\";\n      notification.body = error.toString();\n      await notification.schedule();\n    }\n  } else {\n    console.log(\"依赖库已存在，无需下载。\");\n  }\n}\n\nQuickLook.present(table);\n"
}